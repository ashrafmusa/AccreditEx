// This file was generated by the AI to create a generic, reusable Modal component.

import React, { FC, ReactNode } from 'react';
import { useTranslation } from '../../hooks/useTranslation';
import { XMarkIcon } from '../icons';

interface ModalProps {
  isOpen: boolean;
  onClose: () => void;
  title: string;
  children: ReactNode;
  footer?: ReactNode;
  size?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '4xl' | '7xl';
  maxHeight?: string; // e.g. '90vh'
}

const Modal: FC<ModalProps> = ({ isOpen, onClose, title, children, footer, size = 'md', maxHeight }) => {
    const { dir } = useTranslation();

    if (!isOpen) return null;

    const sizeClasses = {
        sm: 'max-w-sm',
        md: 'max-w-md',
        lg: 'max-w-lg',
        xl: 'max-w-xl',
        '2xl': 'max-w-2xl',
        '4xl': 'max-w-4xl',
        '7xl': 'max-w-7xl',
    };

    const containerStyle = maxHeight ? { height: maxHeight, maxHeight: maxHeight } : {};

    return (
        <div className="fixed inset-0 bg-black bg-opacity-60 z-40 flex justify-center items-center backdrop-blur-sm modal-enter" onClick={onClose} role="dialog" aria-modal="true" aria-labelledby="modal-title">
            <div
                className={`bg-brand-surface dark:bg-dark-brand-surface rounded-lg shadow-xl w-full m-4 modal-content-enter border border-brand-border dark:border-dark-brand-border flex flex-col ${sizeClasses[size]}`}
                style={containerStyle}
                onClick={(e) => e.stopPropagation()}
                dir={dir}
            >
                <header className="p-6 border-b dark:border-dark-brand-border flex justify-between items-center flex-shrink-0">
                    <h3 id="modal-title" className="text-lg font-medium leading-6 text-gray-900 dark:text-gray-100">{title}</h3>
                    <button onClick={onClose} className="p-1 rounded-full text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700" aria-label="Close">
                        <XMarkIcon className="w-5 h-5" />
                    </button>
                </header>
                <main className="p-6 overflow-y-auto flex-grow">
                    {children}
                </main>
                {footer && (
                    <footer className="bg-gray-50 dark:bg-gray-900/50 px-4 sm:px-6 py-3 flex flex-wrap justify-end gap-3 rounded-b-lg border-t dark:border-dark-brand-border flex-shrink-0">
                        {footer}
                    </footer>
                )}
            </div>
        </div>
    );
};

export default Modal;